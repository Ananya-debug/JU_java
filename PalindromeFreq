import java.io.*;
import java.util.*;

public class PalindromeFreq {
    public static void main(String[] args) {
        Map<String, Integer> frequencyMap = new HashMap<>();

        try {
            BufferedReader reader = new BufferedReader(new FileReader("input.txt"));
            String line;

            while ((line = reader.readLine()) != null) {
                String[] words = line.split("\\W+");
                for (String word : words) {
                    if (!word.isEmpty()) {
                        word = word.toLowerCase();
                        if (frequencyMap.containsKey(word)) {
                            int count = frequencyMap.get(word);
                            frequencyMap.put(word, count + 1);
                        } else {
                            frequencyMap.put(word, 1);
                        }
                    }
                }
            }
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("Palindromic words and their frequencies:");
        Set<String> keys = frequencyMap.keySet();
        Iterator<String> itr = keys.iterator();
        while (itr.hasNext()) {
            String key = itr.next();
            if (isPalindrome(key)) {
                System.out.println(key + " : " + frequencyMap.get(key));
            }
        }
    }

    private static boolean isPalindrome(String word) {
        int i = 0, j = word.length() - 1;
        while (i < j) {
            if (word.charAt(i) != word.charAt(j)) return false;
            i++;
            j--;
        }
        return true;
    }
}
